/**

@mainpage CS-F214 Assignment-1

@authors Saksham Attri 2021A7PS2950H, Pranav Dinesh Sharma 2021A7PS2818H, Pritam Basu 2021A7PS2175H


Requirements: 
 - GCC to compile the C code
 - GNU Make 

Instructions to Run: Decompress and use the make command

Problems we faced and Bugs:
 - If a propositional atom is repeated in the propositional logic formula, the truth value needs to be entered for each time it appears in the formula.
 - The tree that is drawn is problematic for larger heights.
 - We struggled with cases where the negation operator was involved in the logical formula since it is a unary operator, unlike the other logical operators which are binary, but we were able to overcome this by having separate cases for it.
 - We did not encounter any memory leaks, but almost did not account for them till the very end.

Code Analysis:
 - We used structs to make nodes for our trees.
 - We largely used recursive logic to realize our ideas.


Profiling:
 - We used Gprof as our profiler.
 - Task 1:
   - Unfortunately, for logical formulas with a relatively small number of characters, the profiler indicated very low times to run (zero seconds).
   - With 16,777,212 characters, it took 0.27 seconds in all.
   - With 67,108,860 characters, it took 1.07 seconds in all.
   - And with 134,217,724 characters, it took 2.16 seconds in all.

We found the assignment really engaging and it was really fun to work in a team environment.
This assignment also helped deepen our insight into theoretical concepts behind propositional logic.
We thank all our instructors for providing us this oppurtunity.

*/